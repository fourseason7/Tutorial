<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAMQOAADEDgAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8AQEREA0BERARAREQD////AP///wD///8A////AP//
        /wD///8A////AEBERANAREQEQEREA////wD///8A////AP///wD///8A////AP///wBAREQDQEREBEBE
        RAP///8A////AP///wD///8A////AP///wD///8A////AP///wBAREQBQEREB0BERAhAREQHQEREAf//
        /wD///8A////AP///wD///8AAiFxMhArax1AREQIQEREB0BERAH///8A////AP///wD///8A////AEBE
        RAFAREQHQERECEBERAf///8A////AEBERANAREQB////AP///wD///8A////AP///wBAREQBQERECkBE
        RAtAREQKQEREAf///wABIXMHASByYAEfcc4BIHL+Ayh79AYodYscMmIcQERECkBERAH///8A////AP//
        /wD///8A////AEBERAFAREQKQERECEBERAP///8AQEREBEBERAdAREQB////AP///wD///8A////AP//
        /wBAREQCQEREDUBERA8YL2UmAyR1hAIjdekCInX/ASJ0/wIidf8DKn7/Ayh7/wUnde8JJ3B/JjZYF0BE
        RAL///8A////AP///wD///8A////AEBERAFAREQHQEREBP///wBAREQDQERECEBERApAREQC////AP//
        /wD///8A////AP///wAFKXg5CCl2qwcpd/kGKHb/AiV5/wIleP8CJHf/AiV4/wQsgf8DKn7/Ayh7/wUn
        dv8GJXLnCCVtcREpZgf///8A////AP///wD///8A////AEBERAFAREQD////AP///wBAREQHQEREC0BE
        RA1AREQC////AAQrfQYEK31bBCt+yQQqf/4EKn7/Bip6/wcqef8GKXn/Ayd7/wMnev8DJ3v/BS6D/wQs
        gf8DKn7/Ayh7/wUndv8GJXP/BSNw3gIgblsBHm0C////AP///wD///8A////AP///wD///8A////AEBE
        RAFAREQKQEREDxs3aiMGL4F/BC6D5gUug/8FLoL/BC2C/wQsgf8ELID/Byx8/wgse/8HK3v/Ayl9/wMq
        fv8FMYb/BS6D/wQsgf8DKn7/Ayh7/wUndv8GJXP/BCNx/wIfcNAAHWxM////AP///wD///8A////AP//
        /wD///8A////AEBERAEKNIGYCTOE9wkzhP8FMYf/BTGG/wUwhf8FL4T/BS+E/wUug/8ELYL/By5+/wgt
        fP8HLH3/BCyA/wYzif8FMYb/BS6D/wQsgf8DKn7/Ayh7/wUndv8GJXP/BCNx/wEfcf4AHW6r////AP//
        /wD///8A////AP///wD///8ABjWLBwc2jP8JNof/CTWG/wk1hv8GM4n/BjKI/wYyh/8FMYb/BTCG/wUw
        hf8FL4T/CC+A/wkvf/8IL4D/BjWM/wYzif8FMYb/BS6D/wQsgf8DKn7/Ayh7/wUodv8GJXP/BCNx/wEf
        cfb///8A////AP///wD///8A////AP///wAHOI4IBziP/wc3jv8KOIn/CjeJ/wk2iP8GNYv/BjSK/wYz
        iv8GM4n/BjKI/wUyh/8FMYb/CDGD/wkygv8KOIr/BjWM/wYzif8FMYb/BS6D/wQsgf8DKn7/Ayh7/wUo
        dv8GJXP/BCNw90BERAH///8A////AP///wD///8A////AAc6kQgIOpL/CDqR/wc5j/8KOYv/CjmL/wo4
        iv8HNo3/BzaM/wY1jP8GNYv/BjSK/wYzif8GM4j/CTSF/wo7jP8KOYr/BjWM/wYzif8FMYb/BS6E/wQs
        gf8DKn7/Ayh7/wUodv8GJXP3QERECkBERAH///8A////AP///wD///8ACD2UCAg9lf8IPJT/CDyT/wg7
        kf8LO47/CzuM/wo6jP8HOI//BziO/wc3jv8HNo3/BzaM/wY1i/8GNoz/CzyQ/wo7jP8KOYr/BjWM/wYz
        if8FMYb/BS6E/wQsgf8DKn7/Ayh7/wUodvdAREQLQEREB////wD///8AQEREA0BERAEJP5cICT+Y/wk/
        l/8JPpb/CT2V/wg9k/8LPJD/CzyO/ws7jv8IOpD/CDmR/wc5kP8HOI//BzeO/wc4j/8JPpX/CzyQ/wo7
        jP8KOYr/BjWM/wYzif8FMYb/BS6E/wQsgf8DKn7/Ayh890BERApAREQIQEREA////wBAREQEQEREBxFB
        jgkKQpr/CUGa/wlAmf8JQJj/CT+X/wk+lv8MPpL/Cz2Q/ws8kP8vWaD/IU6b/wg7kv8IOpH/CDqS/wlA
        mf8JPpX/CzyQ/wo7jP8KOYr/BjWM/wYzif8FMYb/BS+E/wQsgf8DKn73QEREAUBERAdAREQE////AEBE
        RANAREQIKERrEgpEnP8KQ53/CkOc/wpCm/8KQZr/CUGa/wtBmP9AZ6X/jKC8/7G8yv+nt8v/Hk2c/wg8
        lP8IPZX/CkOc/wlAmf8JPpX/OmGg/01tpP8MOov/BjWM/wYzif8FMYb/BS+E/wQsgff///8AQEREAUBE
        RAP///8A////AEBERAcqRWkTDkab/wtGn/8LRZ//CkSe/w9In/9Qd7H/nrDJ/7fD0P+zvsv/s7/L/7bC
        zf+csMr/EUWa/wk/l/8KRZ7/CUOc/1Z7tP+8ydX/tsHN/5aowP8zWZr/BjWM/wYzif8FMYb/BS+E9///
        /wD///8A////AP///wD///8AQEREASlGbhIOSZ3/Dkid/xdQpP9fg7j/qbnN/7nF0/+7x9T/vcnW/77K
        1v+5xdH/usbR/73J1P+LpMf/C0Kb/wtHof9sjsD/yNPe/8bR3P/Czdn/ucXQ/7bBzf95kLX/GEOS/wYz
        if8FMYb3////AP///wD///8A////AP///wD///8AOmOdCCNZpv9ri7j/rLvK/7rH0/+9ydb/v8vX/8HN
        2f/Dz9r/xdDc/8bR3P/Czdf/w8zX/8bP2v92lcP/g6LN/9Hb5v/O2eT/zNbi/8rU3//G0dz/vcnT/7nF
        0P+vvMz/WHer/wk1ivf///8A////AP///wD///8A////AKaxvDKqucqnuMbT/7fDzv+3xM//usbR/8LO
        2v/F0dz/x9Le/8nU3//L1uH/zdfi/87Y4//H0dz/oMHW/5+nq/+ZoKb/zdXe/9Xe6f/S3Of/0Nrl/87Y
        4//K1OD/wczX/77J1P+8yNP/oLLL+5Giuz////8A////AK65xEOyvsq7vsrX/sDM2P/Bztr/ws7a/7/K
        1f/AytX/w83Y/8vV4P/O2OP/z9nk/9Hb5v/I1OD/nK7D/2yJp/9RoMz/lpma/3+Bgv+Wl5n/tbq+/9fg
        6v/W4Or/1N3o/9Hb5v/O2OP/xc/a/8LL1//Ay9b/xM/b/bXAy6SwusUZvMjUusLO2v/Ez9v/xtHd/8jT
        3v/K1OD/y9Xg/8fQ2//H0Nr/ydPe/9Lc5v+5zd//iqfC/2WIq/9khaj/ZoSm/1Ol0/9lqs//bazQ/3Gv
        0v92tdr/cbTa/5/J4v/S3+v/2OHr/9Xf6f/S2+b/ydLd/8XP2f/G0Nv/ydPe/8TP2tq6xdAGwszYnsrV
        4P/M1uL/ztjj/9Da5f/S3Ob/09zn/83W4P+5ydP/f7HN/0qh0f9JotL/SKLS/0ii0v9blb3/XavW/2Wu
        1/9qrNL/bazR/26s0f90tdr/cbPa/3a32/+nzOT/1eHs/9ni7P/W3+n/zNbg/8vV3//K1N/1wcvWPv//
        /wBAREQDyNHceNLc5/3U3uj/1t/q/9DZ4v+WnKL/i4+Q/2dqbP+Rmp//VaLN/1Ol0/9PpNP/SqLS/1Sd
        yf9lr9j/brPa/3W22/9NjbX/NHWg/zt8p/9op83/eLjc/3G12/91ttv/sMfc/9jh7P/Y4ev/0tvk98HK
        00xAREQD////AEBERARAREQHzdbgU8PQ3/SDtdX/fLPR/4eouv+UtMX/jKu9/4+zxv9hqM7/XqfP/1up
        1f9Vp9T/WqDL/2yy2v91ttz/fbre/1CQuv8kZ5b/JGeV/2+py/+Au93/ebjd/3C02v93n8L/i6XD/7vL
        3fnQ2eNPQEREB0BERAT///8AQEREA0BERAhAREQKhaK9IV+kzcFdq9b/ZK/Y/2qx2f9ts9r/b7LZ/2yt
        0v9oq9D/ZKnQ/1+r1v9ipc7/cbTb/3u53f+Dvd//W5nC/zJ4pv8zdaL/d6zN/4K42P9+ut3/dbbc/3ij
        x7F9mbpVjaTAEP///wBAREQBQEREA////wD///8AQEREB0BERAtAREQNX6rUoGav2P9us9r/cLLY/2Wn
        zv9VmMH/ZKXM/3Ox1P9trdL/Z6vR/2qo0P95uN3/frre/4e/4P9joMj/QYW0/0GFs/9+sdH/hrnX/3+2
        1/9+ud3/drLXPP///wD///8A////AP///wD///8A////AP///wBAREQBQERECkBERA9jpsykbrLZ/3e3
        3P93tNn/GmKU/xxklf9Ag6//f7rd/3ay1P9urdL/bqfL/4Otzv+Pvt3/lMHf9Hyv0dtmn8fbZ6DH24+9
        29uTvdjdi7nV3YK00a9vnroI////AP///wD///8A////AP///wD///8A////AP///wBAREQBQEREDWio
        y6VxsNP/fbnd/3642/8obp//KnGh/02OuP+GvuD/gLrd/3Sx1P9xqMrnepe2moGgv0qMr80I////AP//
        /wD///8A////AEBERAJAREQNQERED0BERA1AREQC////AP///wD///8A////AP///wD///8A////AP//
        /wBAREQBb67So3Wz1f9/t9n/hLvc/zd8q/87gK//WZfA/4zB4f+Evt//e7jc/3Kv0rJAREQLQERECkBE
        RAH///8A////AP///wD///8A////AEBERAFAREQKQEREC0BERApAREQB////AP///wD///8A////AP//
        /wD///8A////AP///wB7uNx5grvb/4K52v+Futr/Q4e2/0qOu/9in8f/jsLh/4a+4P+Fvt//frrcjEBE
        RAdAREQIQEREB0BERAH///8A////AP///wD///8A////AEBERAFAREQHQERECEBERAdAREQB////AP//
        /wD///8A////AP///wD///8A////AH+73gKOweBLm8XfWZW/2lp9rc9Zeq7SV4u62lehyuRXoMvlV5LE
        4k+Fvd8F////AEBERANAREQEQEREA////wD///8A////AP///wD///8A////AP///wBAREQDQEREBEBE
        RAP///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/j+P4/4Pg+GfBAHwj4AA+IfAAHzCAAAfwAAAD+AAAAfgAAAH4AAAA+AA
        AAHgAAABgAAAAIAAAACAAAAEwAAAB8AAAAfgAAAHwAAAAwAAAAAAAAAAAAAAAIAAAACAAAAAgAAABMAA
        AB/AAAAf4AAeD/AAHwf4AA+D+ACP4/////8=
</value>
  </data>
</root>